---
- name: Install nvm and setup nodejs
  hosts: localhost
  tags: nodejs

  vars:
    source_zshrc: . {{ ansible_env.HOME }}/.zshrc

  tasks:
    - name: install prerequisities
      ansible.builtin.package:
        name: "{{ item }}"
        state: present
      become: true
      with_items:
        - curl
        - zsh

    - name: Check if NVM is installed
      shell: /bin/zsh -c "command -v nvm"
      register: nvm_exists
      ignore_errors: true

    - name: Install nvm
      when: nvm_exists is failed
      ansible.builtin.shell: >
        curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash;

        cat << 'EOF' >> {{ ansible_env.HOME }}/.zshrc
        export NVM_DIR="$HOME/.nvm"
        [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
        [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
        EOF
      args:
        creates: "{{ ansible_env.HOME }}/.nvm/nvm.sh"

    - name: Install node
      shell:
        cmd: >
          /bin/zsh -c "{{ source_zshrc }} && nvm install {{ item }}"
      loop:
        - "--lts"
        - "node"

    - name: Set up PNPM
      ansible.builtin.shell: /bin/zsh -c "pnpm setup"

    - name: Install global node packages
      shell: >
        /bin/zsh -c "{{ source_zshrc }} && pnpm -g add {{ item }}"
      with_items:
        - "typescript ts-node @types/node"

    - name: Install commitizen
      shell: >
        /bin/zsh -c "{{ source_zshrc }} && pnpm -g add commitizen cz-conventional-changelog"

    - name: setup yarn
      command:
        cmd: echo 'export PATH=$PATH:$(yarn global bin)\n' >> {{ ansible_env.HOME }}/.zshrc
